import { type CollectionMode, type CurrencyCode, type TransactionOrigin, type TransactionStatus } from '../../../enums/index.js';
import { type CustomData } from '../../../entities/index.js';
import { BillingDetailsNotification, TransactionCheckoutNotification, TransactionPaymentAttemptNotification } from '../shared/index.js';
import { TransactionsTimePeriodNotification } from './transactions-time-period-notification.js';
import { TransactionItemNotification } from './transaction-item-notification.js';
import { TransactionDetailsNotification } from './transaction-details-notification.js';
import { type ITransactionNotificationResponse } from '../../types/index.js';
export declare class TransactionNotification {
    readonly id: string;
    readonly status: TransactionStatus;
    readonly customerId: string | null;
    readonly addressId: string | null;
    readonly businessId: string | null;
    readonly customData: CustomData | null;
    readonly currencyCode: CurrencyCode;
    readonly origin: TransactionOrigin;
    readonly subscriptionId: string | null;
    readonly invoiceId: string | null;
    readonly invoiceNumber: string | null;
    readonly collectionMode: CollectionMode;
    readonly discountId: string | null;
    readonly billingDetails: BillingDetailsNotification | null;
    readonly billingPeriod: TransactionsTimePeriodNotification | null;
    readonly items: TransactionItemNotification[];
    readonly details: TransactionDetailsNotification | null;
    readonly payments: TransactionPaymentAttemptNotification[];
    readonly checkout: TransactionCheckoutNotification | null;
    readonly createdAt: string;
    readonly updatedAt: string;
    readonly billedAt: string | null;
    readonly revisedAt: string | null;
    constructor(transaction: ITransactionNotificationResponse);
}
